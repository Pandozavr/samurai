{"version":3,"sources":["components/Aside/Friends/Friends.module.css","components/Find_friend/find_friend.module.css","assets/images/noAvatar.png","assets/images/Infinity200px.svg","components/Profile/Profile.module.css","components/Aside/Aside.module.css","components/Profile/Posts/Post.module.css","components/Header/Header.module.css","serviceWorker.js","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","redux/dialogs-reducer.js","components/Dialogs/MessageItem/MessageItem.jsx","components/Dialogs/DialogItem/DialogItem.jsx","utils/validation_form/validators.js","components/common/FormControl/FormControls.js","components/Dialogs/Dialogs.jsx","components/hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Aside/Friends/Friends.jsx","components/Aside/Aside.jsx","components/Aside/AsideContainer.jsx","API(DAL)/api.js","redux/find_friend-reducer.js","components/common/Paginator/Paginator.jsx","components/Find_friend/UserItem.jsx","components/Find_friend/FindFriend.jsx","components/common/preloader.jsx","redux/usersSelectors.js","components/Find_friend/UsersContainer.jsx","components/Profile/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","redux/profile-reducer.js","components/Profile/Posts/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","App.js","redux/aside-reducer.js","redux/redux-store.js","index.js","components/Dialogs/Dialogs.module.css","components/common/FormControl/FormControls.module.css","components/common/Paginator/Paginator.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","News","Music","Settings","initialState","DialogData","id","name","MessageData","message","DialogReducer","state","action","type","newMessage","newMessageBody","stateCopy","MessageItem","props","DialogItem","className","style","active","to","required","value","maxLengthCreator","maxLength","length","ElementCreator","Element","input","meta","hasError","touched","error","styles","red","maxLengthPost","Textarea","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","Dialogs","DialogsElements","map","d","MessageElements","m","dialogs","dialogPart","values","addMessage","mapStateToPropsForRedirect","authFlag","Auth","isAuth","withAuthRedirect","Component","RedirectComponent","this","React","connect","compose","DialogsPage","newText","newMessageText","dispatch","addMessageDialog","FriendsItem","Style","friendIcon","src","Aside","Friends","f","navbar","item","activeClassName","friend","AsideContainer","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userID","console","log","profileAPI","getProfileData","delete","post","getStatus","updateStatus","status","put","loginAPI","email","password","rememberMe","intialState","users","totalUsersCount","isFetching","followingInProgress","follow","unfollow","setUsers","setTotalUsersCount","TotalUsersCount","count","setFetchingValue","followProgress","FindFriendReducer","u","followed","filter","Paginator","pagesCount","Math","ceil","pages","i","push","useState","currentNumberPart","setCurrentNumberPart","numberPart","leftBorder","rightBorder","partArray","slice","page","onClick","p","SelectedPage","e","onPageChanged","UserItem","photos","small","noAvatar","ffAvatar","disabled","valueFollowingInProgress","some","unFollowThunkCreator","followThunkCreator","FindFriend","key","Preloader","preloader","getUsers","FindFriendPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getValueFollowingInProgress","FF_Container","pageNamber","getUsersThunkCreator","setCurrentPage","a","items","totalCount","resultCode","ProfileStatusWithHooks","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","currentTarget","autoFocus","onBlur","ProfileInfo","profile","large","aboutMe","PostData","ProfileReducer","newPost","newPostText","Post","avaPost","Posts","memo","PostElements","PostFormRedux","addPost","PostsContainer","ProfilePage","Profile","img","ProfileContainer","params","authorisedUserId","history","getUsersProfileThunk","withRouter","Header","loginBlock","login","logout","setAuthUeserData","payload","getAuthUeserData","AuthReducer","HeaderContainer","maxLengthLogin","Input","ReduxFormLogin","placeholder","for_Error","messages","stopSubmit","_error","formData","initialized","appReducer","App","initializeApp","path","render","DialogsContainer","UsersContainer","asideReducer","reducers","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.eaad0bcd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendIcon\":\"Friends_friendIcon__2T8JJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ffAvatar\":\"find_friend_ffAvatar__2tJD1\"};","module.exports = __webpack_public_path__ + \"static/media/noAvatar.44330dbd.png\";","module.exports = __webpack_public_path__ + \"static/media/Infinity200px.5ef146cc.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Profile_img__3uNF9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Aside_item__1eVYi\",\"active\":\"Aside_active__12oKr\",\"friend\":\"Aside_friend__17Zzr\",\"navbar\":\"Aside_navbar__2WHyh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avaPost\":\"Post_avaPost__11zEh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBlock\":\"Header_loginBlock__wb9lu\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\n\r\nconst News = () => {\r\n    return(\r\n        <div>News</div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from \"react\";\r\n\r\nconst Music = () => {\r\n    return(\r\n        <div>Music</div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from \"react\";\r\n\r\nconst Settings = () => {\r\n    return(\r\n        <div>Settings</div>\r\n    )\r\n}\r\n\r\nexport default Settings;","const ADD_MESSAGE = \"ADD-MESSAGE\";\r\n\r\nlet initialState = {\r\n    DialogData: [\r\n        {id:\"1\", name: \"Grizz\"},\r\n        {id:\"2\", name: \"Panda\"},\r\n        {id:\"3\", name: \"Chloe\"},\r\n    ],\r\n    MessageData: [\r\n        {id:\"1\", message: \"Hi!\"},\r\n        {id:\"2\", message: \"How are you?\"},\r\n    ]\r\n};\r\n\r\nconst DialogReducer = (state = initialState,action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n            let newMessage = {\r\n                id: \"3\",\r\n                message: action.newMessageBody\r\n            }\r\n            let stateCopy = {\r\n                ...state,\r\n                MessageData: [...state.MessageData, newMessage]\r\n            };\r\n            return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};\r\n\r\nexport const addMessageDialog = (newMessageBody) => {\r\n\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        newMessageBody\r\n    }\r\n};\r\n\r\nexport default DialogReducer;","import React from \"react\";\r\n\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default MessageItem;","import React from \"react\";\r\nimport style from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={style.active}>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","\r\nexport const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Error. Max Length is ${maxLength} symbols`;\r\n    return undefined;\r\n};","import React from \"react\";\r\nimport styles from \"./FormControls.module.css\"\r\n\r\nexport const ElementCreator = Element => ({ input, meta, ...props }) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Element  className={hasError ? styles.error : \"\"} {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span className={styles.red}>{meta.error}</span>}\r\n        </div>\r\n\r\n    )\r\n\r\n};\r\n\r\n\r\n/*\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div>\r\n            <div>\r\n                <textarea  className={hasError ? styles.error : \"\"} {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span className={styles.red}>{meta.error}</span>}\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div>\r\n            <div>\r\n                <input  className={hasError ? styles.error : \"\"} {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span className={styles.red}>{meta.error}</span>}\r\n        </div>\r\n\r\n    )\r\n};*/\r\n","import React from \"react\";\r\nimport style from \"./Dialogs.module.css\"\r\nimport MessageItem from \"./MessageItem/MessageItem\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validation_form/validators\";\r\nimport {ElementCreator} from \"../common/FormControl/FormControls\";\r\n\r\nlet maxLengthPost = maxLengthCreator(10);\r\nconst Textarea = ElementCreator(\"textarea\");\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\r\n    let DialogsElements = props.DialogData.map(d => <DialogItem name={d.name} id={d.id}/> );\r\n    let MessageElements = props.MessageData.map(m => <MessageItem message={m.message}/> );\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageBody);\r\n    };\r\n\r\n    return(\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogPart}>\r\n                {DialogsElements}\r\n            </div>\r\n            <div>\r\n                {MessageElements}\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name={\"newMessageBody\"} validate={[required, maxLengthPost]}/>\r\n            <button>add</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    authFlag: state.Auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.authFlag)return <Redirect to={\"/login\"}/>\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedRedirectComponent\r\n};","import React from \"react\";\r\nimport {addMessageDialog} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        DialogData: state.DialogsPage.DialogData,\r\n        MessageData: state.DialogsPage.MessageData,\r\n        newText: state.DialogsPage.newMessageText\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageBody) => {\r\n            dispatch(addMessageDialog(newMessageBody))\r\n        }\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)","import React from \"react\";\r\nimport Style from \"./Friends.module.css\"\r\n\r\nlet FriendsItem = (props) => {\r\n    return (\r\n        <div className={Style.friendIcon}>\r\n            <img src={props.src}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendsItem;","import React from 'react';\r\nimport Style from './Aside.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport FriendsItem from \"./Friends/Friends\";\r\n\r\nconst Aside = (props) => {\r\n\r\n    let Friends = props.src.map(f => <FriendsItem src={f.src}/>)\r\n\r\n    return (\r\n        <aside>\r\n            <div className={Style.navbar}>\r\n                <div className={Style.item}>\r\n                    <NavLink activeClassName={Style.active} to='/profile'>My profile</NavLink>\r\n                </div>\r\n                <div className={Style.item}>\r\n                    <NavLink activeClassName={Style.active} to='/dialogs'>Dialogs</NavLink>\r\n                </div>\r\n                <div className={Style.item}>\r\n                    <NavLink activeClassName={Style.active} to='/news'>News</NavLink>\r\n                </div>\r\n                <div className={Style.item}>\r\n                    <NavLink activeClassName={Style.active} to='/find_friend'>Find Friend</NavLink>\r\n                </div>\r\n                <div className={Style.item}>\r\n                    <NavLink activeClassName={Style.active} to='/music'>Music</NavLink>\r\n                </div>\r\n                <div className={Style.item}>\r\n                    <NavLink activeClassName={Style.active} to='/settings'>Settings</NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n                <div>\r\n                    My Friend:\r\n                </div>\r\n                <div  className={Style.friend}>\r\n                    {Friends}\r\n                </div>\r\n            </div>\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default Aside;","import {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nimport Aside from \"./Aside\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        src: state.Aside.Friends\r\n    }\r\n}\r\n\r\nconst AsideContainer = connect(mapStateToProps)(Aside);\r\n\r\nexport default AsideContainer;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\r\n        \"API-KEY\": \"556f597a-4931-4dc9-aa24-4fba87ed0759\"\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(\r\n            response => {\r\n                return response.data;\r\n            }\r\n        )\r\n    },\r\n    auth() {\r\n        return instance.get(`auth/me`).then(\r\n            response => {\r\n                return response.data;\r\n            }\r\n        )\r\n    },\r\n    getProfileData(userID) {\r\n        console.log(\"plese use profileAPI\");\r\n        return profileAPI.getProfileData(userID)\r\n    },\r\n    unfollow(id) {\r\n        return instance.delete(`follow/${id}`).then(\r\n            response => {\r\n                return response.data;\r\n            }\r\n        )\r\n    },\r\n    follow(id) {\r\n        return instance.post(`follow/${id}`).then(\r\n            response => {\r\n                return response.data;\r\n            }\r\n        )\r\n    }\r\n};\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfileData(userID) {\r\n        return instance.get(`profile/` + userID)\r\n    },\r\n    getStatus(userID) {\r\n        return instance.get(`/profile/status/` + userID)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`/profile/status/`, {status: status})\r\n    }\r\n\r\n};\r\n\r\nexport const loginAPI = {\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`/auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`/auth/login`);\r\n    }\r\n};","import {usersAPI} from \"../API(DAL)/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst CURRENT_PAGE = \"CURRENT_PAGE\";\r\nconst TOTAL_USERS_COUNT = \"TOTAL_USERS_COUNT\";\r\nconst FETCHING = \"FETCHING\";\r\nconst FOLLOW_PROGRESS = \"FOLLOW_PROGRESS\";\r\n\r\nlet intialState = {\r\n    users: [],\r\n    pageSize: 20,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst FindFriendReducer = (state = intialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return{\r\n                ...state,\r\n                users: state.users.map( u => {\r\n                    if (u.id ===action.userID){\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n\r\n        case UNFOLLOW:\r\n            return{\r\n                ...state,\r\n                users: state.users.map( u => {\r\n                    if (u.id ===action.userID){\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case FETCHING: {\r\n            return {...state, isFetching: action.value}\r\n        }\r\n        case FOLLOW_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userID]\r\n                    : state.followingInProgress.filter(id => id != action.userID)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};\r\n\r\nexport const follow = (userID) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userID\r\n    }\r\n};\r\n\r\nexport const unfollow = (userID) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userID\r\n    }\r\n};\r\n\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    }\r\n};\r\n\r\nexport const setCurrentPage = (currentPage) => {\r\n    return {\r\n        type: CURRENT_PAGE,\r\n        currentPage\r\n    }\r\n};\r\n\r\nexport const setTotalUsersCount = (TotalUsersCount) => {\r\n    return {\r\n        type: TOTAL_USERS_COUNT,\r\n        count: TotalUsersCount\r\n    }\r\n};\r\n\r\nexport const setFetchingValue = (value) => {\r\n    return {\r\n        type: FETCHING,\r\n        value: value\r\n    }\r\n};\r\n\r\nexport const followProgress = (isFetching, userID) => {\r\n    return {\r\n        type: FOLLOW_PROGRESS,\r\n        isFetching,\r\n        userID\r\n    }\r\n};\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(setFetchingValue(true));\r\n        let data = await usersAPI.getUsers(currentPage, pageSize)\r\n            dispatch(setFetchingValue(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n    };\r\n};\r\n\r\nexport const unFollowThunkCreator = (userID) => {\r\n    return async (dispatch) => {\r\n        dispatch(followProgress(true, userID));\r\n        let data = await usersAPI.unfollow(userID)\r\n            if(data.resultCode == 0){\r\n                dispatch(unfollow(userID))\r\n            }\r\n            dispatch(followProgress(false, userID));\r\n    };\r\n};\r\n\r\nexport const followThunkCreator = (userID) => {\r\n    return async (dispatch) => {\r\n        dispatch(followProgress(true, userID));\r\n        let data = await usersAPI.follow(userID)\r\n            if(data.resultCode == 0){\r\n                dispatch(follow(userID))\r\n            }\r\n            dispatch(followProgress(false, userID));\r\n    };\r\n};\r\n\r\nexport default FindFriendReducer;","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\n\r\nlet Paginator = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let [currentNumberPart, setCurrentNumberPart] = useState(1)\r\n\r\n    let partSize = 20;\r\n    let numberPart = Math.ceil(pagesCount / partSize);\r\n    let leftBorder = (currentNumberPart - 1) * partSize;\r\n    let rightBorder = leftBorder + partSize;\r\n\r\n    let partArray = pages.slice(leftBorder, rightBorder);\r\n\r\n    let nextClick = () => {\r\n        setCurrentNumberPart(++currentNumberPart)\r\n    };\r\n    let prevClick = () => {\r\n        setCurrentNumberPart(--currentNumberPart)\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={styles.page}>\r\n            {currentNumberPart != 1 && <button onClick={prevClick}>prev</button>}\r\n            {partArray.map(p => {\r\n                return (\r\n                        <span className={props.currentPage === p && styles.SelectedPage}\r\n                              onClick={(e) => {\r\n                                  props.onPageChanged(p)\r\n                              }}>{p}</span>\r\n                )\r\n            })}\r\n            {currentNumberPart != numberPart && <button onClick={nextClick}>next</button>}\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport styles from \"./find_friend.module.css\";\r\nimport noAvatar from \"../../assets/images/noAvatar.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet UserItem = (props) => {\r\n\r\n        return (\r\n                <div>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={\"/profile/\" + props.users.id}>\r\n                            <img src={props.users.photos.small != null ? props.users.photos.small : noAvatar} className={styles.ffAvatar}/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {props.users.followed\r\n                            ? <button disabled={props.valueFollowingInProgress.some(id => id === props.users.id)} onClick={() => {\r\n                                props.unFollowThunkCreator(props.users.id);\r\n                            }}>Unfollow</button>\r\n\r\n                            : <button disabled={props.valueFollowingInProgress.some(id => id === props.users.id)} onClick={() => {\r\n                                props.followThunkCreator(props.users.id);\r\n                            }}>Follow</button>}\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{props.users.name}</div>\r\n                        <div>{props.users.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"props.users.location.country\"}</div>\r\n                        <div>{\"props.users.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n                </div>\r\n        )\r\n    };\r\n\r\n\r\nexport default UserItem;","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport UserItem from \"./UserItem\";\r\n\r\nlet FindFriend = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <Paginator\r\n                currentPage={props.currentPage}\r\n                onPageChanged={props.onPageChanged}\r\n                totalUsersCount={props.totalUsersCount}\r\n                pageSize={props.pageSize}\r\n            />\r\n            {\r\n                props.users.map(u => <UserItem\r\n                        users={u}\r\n                        key={u.id}\r\n                        unFollowThunkCreator={props.unFollowThunkCreator}\r\n                        followThunkCreator={props.followThunkCreator}\r\n                        valueFollowingInProgress={props.valueFollowingInProgress}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\n\r\nexport default FindFriend;","import React from \"react\";\r\nimport preloader from \"../../assets/images/Infinity200px.svg\";\r\n\r\nlet Preloader = (props) => {\r\n  return  <img src={preloader} />\r\n};\r\n\r\nexport default Preloader;","export const getUsers = (state) => {\r\n    return state.FindFriendPage.users\r\n};\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.FindFriendPage.pageSize\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.FindFriendPage.totalUsersCount\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.FindFriendPage.currentPage\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.FindFriendPage.isFetching\r\n};\r\n\r\nexport const getValueFollowingInProgress = (state) => {\r\n    return state.FindFriendPage.followingInProgress\r\n};","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, followProgress, followThunkCreator, getUsersThunkCreator,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    unfollow, unFollowThunkCreator\r\n} from \"../../redux/find_friend-reducer\";\r\nimport FindFriend from \"./FindFriend\";\r\nimport Preloader from \"../common/preloader\";\r\nimport {\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n    getValueFollowingInProgress\r\n} from \"../../redux/usersSelectors\";\r\n\r\n\r\n\r\nclass FF_Container extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNamber) => {\r\n        this.props.getUsersThunkCreator(pageNamber, this.props.pageSize);\r\n\r\n        this.props.setCurrentPage(pageNamber);\r\n\r\n    };\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <FindFriend totalUsersCount={this.props.totalUsersCount}\r\n                        pageSize={this.props.pageSize}\r\n                        currentPage={this.props.currentPage}\r\n                        onPageChanged={this.onPageChanged}\r\n                        users={this.props.users}\r\n                        follow={this.props.follow}\r\n                        unfollow={this.props.unfollow}\r\n                        followProgress={this.props.followProgress}\r\n                        valueFollowingInProgress={this.props.valueFollowingInProgress}\r\n                        unFollowThunkCreator={this.props.unFollowThunkCreator}\r\n                        followThunkCreator={this.props.followThunkCreator}\r\n\r\n            />\r\n        </>\r\n    }\r\n\r\n}\r\n\r\n/*let mapStateToProps = (state) => {\r\n    return {\r\n        users: state.FindFriendPage.users,\r\n        pageSize: state.FindFriendPage.pageSize,\r\n        totalUsersCount: state.FindFriendPage.totalUsersCount,\r\n        currentPage: state.FindFriendPage.currentPage,\r\n        isFetching: state.FindFriendPage.isFetching,\r\n        valueFollowingInProgress: state.FindFriendPage.followingInProgress\r\n    }\r\n};*/\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        valueFollowingInProgress: getValueFollowingInProgress(state)\r\n    }\r\n};\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         follow: (userID) => {\r\n//             dispatch(followAC(userID))\r\n//         },\r\n//         unfollow: (userID) => {\r\n//             dispatch(unfollowAC(userID))\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setCurrentPage: (pageNumber) => {\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//         setTotalUsersCount: (totalCount) => {\r\n//             dispatch(setTotalUsersCountAC(totalCount))\r\n//         },\r\n//         setFetchingValue: (value) => {\r\n//             dispatch(setFetchingValueAC(value))\r\n//         }\r\n//     }\r\n// };\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,\r\n    {\r\n        follow,\r\n        unfollow,\r\n        setUsers,\r\n        setCurrentPage,\r\n        setTotalUsersCount,\r\n        followProgress,\r\n        getUsersThunkCreator,\r\n        unFollowThunkCreator,\r\n        followThunkCreator\r\n\r\n    }\r\n    )(FF_Container);","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    };\r\n\r\n    let [status, setStatus] = useState(props.status);\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n        return (\r\n            <div>\r\n                { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"------\"}</span>\r\n                </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport Preloader from \"../../common/preloader\";\r\nimport ProfileStatusWithHooks from \"../ProfileStatus/ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if(!props.profile){\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src={props.profile.photos.large} />\r\n            </div>\r\n            <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            <div>{props.profile.aboutMe}</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;","import {profileAPI, usersAPI} from \"../API(DAL)/api\";\r\n\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USERS_PROFILE = \"SET_USERS_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\n\r\n\r\nlet intialState = {\r\n    PostData: [\r\n        {id: \"1\", post: \"First post\"},\r\n        {id: \"2\", post: \"Second post\"},\r\n        {id: \"3\", post: \"Third post\"}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst ProfileReducer = (state = intialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: \"4\",\r\n                post: action.newPostText\r\n            };\r\n            let stateCopy = {\r\n                ...state,\r\n                PostData: [...state.PostData, newPost],\r\n            };\r\n            return stateCopy;\r\n        }\r\n        case SET_USERS_PROFILE: {\r\n            let stateCopy = {...state, profile: action.profile};\r\n            return stateCopy;\r\n        }\r\n        case SET_STATUS: {\r\n            let stateCopy = {...state, status: action.status};\r\n            return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPost = (newPostText) => {\r\n\r\n    return {\r\n        type: ADD_POST,\r\n        newPostText\r\n    }\r\n};\r\n\r\nexport const setUsersProfile = (profile) => {\r\n    return {\r\n        type: SET_USERS_PROFILE,\r\n        profile: profile\r\n    }\r\n};\r\n\r\nexport const setStatus = (status) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status\r\n    }\r\n};\r\n\r\nexport const getUsersProfileThunk = (userID) => async (dispatch) => {\r\n    let response = await usersAPI.getProfileData(userID);\r\n    dispatch(setUsersProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userID) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userID);\r\n        dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n};\r\n\r\n\r\nexport default ProfileReducer;","import React from \"react\";\r\nimport Style from \"./Post.module.css\"\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div>\r\n            <img className={Style.avaPost} src=\"https://trikky.ru/wp-content/blogs.dir/1/files/2019/07/17/images-1-1.jpg\" />\r\n            { props.m }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport Post from \"./Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validation_form/validators\";\r\nimport {ElementCreator} from \"../../common/FormControl/FormControls\";\r\n\r\nlet maxLengthPost = maxLengthCreator(20);\r\n\r\nconst Textarea = ElementCreator(\"textarea\");\r\n\r\n\r\nconst Posts = React.memo( props => {\r\n\r\n    console.log(\"render\");\r\n\r\n    let PostElements = props.PostData.map(p => <Post m ={p.post}/>);\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n  return (\r\n      <div>\r\n          <PostFormRedux onSubmit={addNewPost} />\r\n          {PostElements}\r\n      </div>\r\n  )\r\n});\r\n\r\nconst PostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name={\"newPostText\"} validate={[required, maxLengthPost]}/>\r\n            <button>Add</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst PostFormRedux = reduxForm({form: \"ProfilePostForm\"})(PostForm);\r\n\r\nexport default Posts;","import React from \"react\";\r\nimport {addPost} from \"../../../redux/profile-reducer\";\r\nimport Posts from \"./Posts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        PostData: state.ProfilePage.PostData\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPost(newPostText))\r\n        }\r\n    }\r\n};\r\n\r\n\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;","import React from 'react';\r\nimport Style from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport PostsContainer from \"./Posts/PostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n        return (\r\n            <main>\r\n                <div className={Style.img}>\r\n                    <img src='https://cdn.pixabay.com/photo/2017/02/01/22/02/mountain-landscape-2031539_1280.jpg'/>\r\n                </div>\r\n                <ProfileInfo profile={props.profile} updateStatus={props.updateStatus} status={props.status}/>\r\n                <PostsContainer/>\r\n            </main>\r\n        )\r\n};\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUsersProfileThunk, setUsersProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        let userID = this.props.match.params.userID;\r\n\r\n        if(!userID){\r\n            userID = this.props.authorisedUserId;\r\n            if(!userID) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n\r\n        this.props.getUsersProfileThunk(userID);\r\n            this.props.getStatus(userID);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} updateStatus={this.props.updateStatus}/>\r\n            // Мы пишем так - {...this.props}, а не так - props = {this.props}, чтобы передать не один отрибут пропс,\r\n            // а чтобы своего рода раскукожить входящий объект пропс и передать каждый ключ объекта пропс, как отдельный атрибут.\r\n        )\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.ProfilePage.profile,\r\n        status: state.ProfilePage.status,\r\n        authorisedUserId: state.Auth.id,\r\n        isAuth: state.Auth.isAuth\r\n    }\r\n};\r\n\r\n/*let authRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\nlet WithRouterContainer = withRouter(authRedirectComponent);\r\n\r\nexport default connect(mapStateToProps, {getUsersProfileThunk})(WithRouterContainer);*/\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUsersProfileThunk, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)","import React from 'react';\r\nimport Style from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) =>{\r\n  return(\r\n    <header>\r\n      <img src='https://static.rfstat.com/renderforest/images/v2/logo-homepage/flat_3.png' />\r\n        <div className={Style.loginBlock}>\r\n            {props.isAuth ?\r\n                <div>{props.login} - <button onClick={props.logout}>log out</button></div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import {loginAPI, usersAPI} from \"../API(DAL)/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = \"auth/SET_USER_DATA\";\r\n\r\nlet intialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isFetching: null,\r\n    isAuth: false\r\n};\r\n\r\nconst  AuthReducer = (state = intialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUeserData = (id, email, login, isAuth) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        payload: {\r\n            id,\r\n            email,\r\n            login,\r\n            isAuth\r\n        }\r\n    }\r\n};\r\n\r\nexport const getAuthUeserData = () => async (dispatch) => {\r\n   let data = await usersAPI.auth();\r\n\r\n        if(data.resultCode === 0) {\r\n            let {id, email, login} = data.data;\r\n            dispatch(setAuthUeserData(id, email, login, true))\r\n        }\r\n\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch)=> {\r\n    let response = await loginAPI.login(email, password, rememberMe);\r\n\r\n        if(response.data.resultCode === 0) {\r\n            dispatch(getAuthUeserData())\r\n        } else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"some error\"\r\n            dispatch(stopSubmit(\"login\", {_error: message}));\r\n        }\r\n};\r\n\r\nexport const logout = () => async (dispatch)=> {\r\n    let response = await loginAPI.logout();\r\n\r\n        if(response.data.resultCode === 0) {\r\n            dispatch(setAuthUeserData(null, null, null, false))\r\n        }\r\n};\r\n\r\nexport default AuthReducer;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUeserData, logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component{\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.Auth.isAuth,\r\n    login: state.Auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {getAuthUeserData, logout})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validation_form/validators\";\r\nimport {ElementCreator} from \"../common/FormControl/FormControls\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from \"../common/FormControl/FormControls.module.css\"\r\n\r\n\r\nconst maxLengthLogin = maxLengthCreator(50);\r\nconst Input = ElementCreator(\"input\");\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    };\r\n\r\n    if(props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <ReduxFormLogin onSubmit={onSubmit}/>\r\n    </div>\r\n};\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Login\"} name={\"email\"} component={Input} validate={[required, maxLengthLogin]}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"} component={Input} type={\"password\"} validate={[required, maxLengthLogin]}/>\r\n            </div>\r\n            <div>\r\n                <Field type={\"checkbox\"} name={\"rememberMe\"} component={\"input\"}/> remember me\r\n            </div>\r\n            { props.error && <div className={styles.for_Error}> {props.error} </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst ReduxFormLogin = reduxForm({form: \"login\"})(LoginForm);\r\n\r\nconst mapStateToProps = (state) => ({\r\n   isAuth: state.Auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUeserData} from \"./auth-reducer\";\r\n\r\nconst INI_SUCCESS = \"INI_SUCCESS\";\r\n\r\nlet intialState = {\r\n    initialized: false\r\n};\r\n\r\n\r\nconst  appReducer = (state = intialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case INI_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const iniSuccess = () => {\r\n\r\n    return {\r\n        type: INI_SUCCESS\r\n    }\r\n};\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUeserData());\r\n    promise.then(() => {\r\n        dispatch(iniSuccess())\r\n    })\r\n};\r\n\r\n\r\nexport default appReducer;","import React, {Component} from 'react';\nimport './App.css';\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport AsideContainer from \"./components/Aside/AsideContainer\";\nimport UsersContainer from \"./components/Find_friend/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/preloader\";\n\n\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n\n    render() {\n\n        if(!this.props.initialized) {\n            return <Preloader />\n        }\n\n        return (\n\n            <BrowserRouter>\n                <div className='app-wrapper'>\n                    <HeaderContainer/>\n                    <AsideContainer/>\n                    <div className='app-wrapper-content'>\n                        <Route path='/profile/:userID?' render={() => <ProfileContainer/>}/>\n                        <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                        <Route path='/news' render={News}/>\n                        <Route path='/music' render={Music}/>\n                        <Route path='/settings' render={Settings}/>\n                        <Route path='/find_friend' render={() => <UsersContainer/>}/>\n                        <Route path='/login' render={() => <Login/>}/>\n                    </div>\n                </div>\n            </BrowserRouter>\n\n        )\n\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.App.initialized\n})\n\nexport default connect(mapStateToProps,{initializeApp})(App);","let initialState = {\r\n    Friends:[\r\n        {src: \"https://p.kindpng.com/picc/s/185-1855366_transparent-default-avatar-png-we-bare-bears-grizz.png\"},\r\n        {src: \"https://c7.hotpng.com/preview/331/66/347/chloe-park-grizzly-bear-food-truck-chloe-part-2-giant-panda-bear.jpg\"},\r\n        {src: \"https://pm1.narvii.com/7212/cf418e7dd80dd75fb2d371d6a3167231493dba08r1-720-707v2_uhq.jpg\"}\r\n    ]\r\n};\r\n\r\nconst asideReducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default asideReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport ProfileReducer from \"./profile-reducer\";\r\nimport DialogReducer from \"./dialogs-reducer\";\r\nimport asideReducer from \"./aside-reducer\";\r\nimport FindFriendReducer from \"./find_friend-reducer\";\r\nimport AuthReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    ProfilePage: ProfileReducer,\r\n    DialogsPage: DialogReducer,\r\n    Aside: asideReducer,\r\n    FindFriendPage: FindFriendReducer,\r\n    Auth: AuthReducer,\r\n    form: formReducer,\r\n    App: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__gpWHE\",\"active\":\"Dialogs_active__31s-4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormControls_error__2815j\",\"red\":\"FormControls_red__1DfnI\",\"for_Error\":\"FormControls_for_Error__2S0AE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SelectedPage\":\"Paginator_SelectedPage__23i7b\",\"page\":\"Paginator_page__3D66D\"};"],"sourceRoot":""}